workflows:
  build-ipa:
    name: Build iOS .ipa
    max_build_duration: 60
    environment:
      groups:
        - ios_bricoscan_signing
      vars:
        FLAVOR: "production"
      node: latest
      xcode: latest
      cocoapods: default
    scripts:
      - name: Pulizia del progetto
        script: |
          rm -rf node_modules
          rm -f package-lock.json
          npm cache clean --force

      - name: Installazione dipendenze
        script: |
          npm install --force

      - name: Build Ionic
        script: |
          ionic build --prod

      - name: Aggiunta ios
        script: |
          npx cap add ios
          npx capacitor-assets generate
          npx cap sync ios

      - name: Crea exportOptions.plist
      script: |
        echo '<?xml version="1.0" encoding="UTF-8"?>' > exportOptions.plist
        echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> exportOptions.plist
        echo '<plist version="1.0">' >> exportOptions.plist
        echo '<dict>' >> exportOptions.plist
        echo '    <key>method</key>' >> exportOptions.plist
        echo '    <string>ad-hoc</string>' >> exportOptions.plist
        echo '    <key>teamID</key>' >> exportOptions.plist
        echo '    <string>'66JC5AYWBZ'</string>' >> exportOptions.plist
        echo '    <key>provisioningProfiles</key>' >> exportOptions.plist
        echo '    <dict>' >> exportOptions.plist
        echo '        <key>'com.ionic.scanapp'</key>' >> exportOptions.plist
        echo '        <string>'scanappprovisioning'</string>' >> exportOptions.plist
        echo '    </dict>' >> exportOptions.plist
        echo '    <key>compileBitcode</key>' >> exportOptions.plist
        echo '    <false/>' >> exportOptions.plist
        echo '    <key>thinning</key>' >> exportOptions.plist
        echo '    <string>&lt;none&gt;</string>' >> exportOptions.plist
        echo '</dict>' >> exportOptions.plist
        echo '</plist>' >> exportOptions.plist

      - name: Configura certificati e provisioning
        script: |
          echo "$CERTIFICATE" | base64 -d > distribution_certificate.p12
          echo "$PROVISIONING_PROFILE" | base64 -d > distribution_profile.mobileprovision
          security import distribution_certificate.p12 -P "$CERTIFICATE_PASSWORD" -A
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp distribution_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
      - name: Firma e crea l'IPA
        script: |
          cd ios/App
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Release \
            -allowProvisioningUpdates \
            -archivePath $PWD/build/App.xcarchive archive
          xcodebuild \
            -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportOptionsPlist $PWD/exportOptions.plist \
            -exportPath $PWD/build/ \
            -allowProvisioningUpdates
    artifacts:
      - $PWD/build/IPA/*.ipa
